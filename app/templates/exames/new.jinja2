{% extends "./base.jinja2" %}

{% block header %}
<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.4.0/axios.min.js"></script>
<h1>{% block title %}Criar Exame{% endblock %}</h1>
{% endblock %}

{% block content %}
<div class="container">
    <h3>Criar Exame para a Turma: {{ turma.nome }}</h3>
    <form method="POST" action="{{ url_for('turmas.exames.create', turma_id=turma.id) }}">
        <div class="form-floating mb-3">
            <input
                class="form-control"
                type="text"
                id="nome"
                name="nome"
                placeholder="Digite o nome do Exame"
                required="true"
            />
            <label for="nome" class="form-label">Nome</label>
        </div>
        <div class="form-floating mb-3">
        <div class="mb-3">
            <label for="data_inicio" class="form-label">Data Inicio</label>
            <input
                class="form-control"
                type="datetime-local"
                id="data_inicio"
                name="data_inicio"
                placeholder="Selecione a Data e horario que começa o Exame"
                required="true"
            />
        </div>
        <div class="form-floating mb-3">
        <div class="mb-3">
            <label for="data_fim" class="form-label">Data Fim</label>
            <input
                class="form-control"
                type="datetime-local"
                id="data_fim"
                name="data_fim"
                placeholder="Selecione a Data e horario que termina o exame"
                required="true"
            />
        </div>
        {# questoes Container #}
        <ul class="container" id="questoesContainer" style="list-style-type: none;">
            <h4>Questões</h4>
        </ul>
        <div class="input-group mb-3 w-25">
            <span class="input-group-text">Nota Exame</span>
            <input type="text" name="nota_exame" id="notaExame" class="form-control" value="0.00" readonly>
        </div>
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#questoesModal">Adicionar Questoes</button>
        {# modal #}
        <div class="modal fade" id="questoesModal" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false" >
            <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h2 class="modal-title fs-5" id="modalTitle">Adicionar Questoes</h2>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                    {# content #}
                    {# {% for questao in questoes %}
                        <div class="container">
                            <label>{{ questao.enunciado }}</label>
                            <input type="checkbox" name="questoes" value="{{ questao.id }}" >
                        </div>
                    {% endfor %} #}
                    {% for questao in questoes_json %}
                        <div class="container">
                            <label>{{ questao.enunciado }}</label>
                            <input type="checkbox" name="questoes" value="{{ questao.id }}" >
                        </div>
                    {% endfor %}
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                        <button type="button" class="btn btn-primary" id="btnIncluir">Incluir</button>
                    </div>
                </div>
            </div>
        </div>
        <input type="hidden" id="questoesSelecionadasInput" name="questoes_selecionadas" />
        <button id="submitForm" type="submit" class="btn btn-secondary">Criar Exame</button>
    </form>
</div>
<script>
    const isPosNumber = (value) => {
        const regex = new RegExp(/^[0-9]+([.][0-9]+)?/)
        const match = value.match(regex)
        return match ? value : ""
    }

    const addQuestaoElementToHTML = (questao) => {
        console.log(questoesSelecionadas)
        const novoElemeto = document.createElement("li")
        novoElemeto.innerHTML = `
            <div value="${questao.id}" class="mb-3 mt-3 card">
                <div class="card-header d-flex flex-row">
                    <div  class="nota-input-container d-flex flex-row w-75">
                        <input 
                            class="form-control w-sm-auto w-md-50" 
                            type="number" 
                            name="questao_nota_${questao.id}" 
                            id="questao_nota_${questao.id}" 
                            placeholder="Nota da questão"
                            min="0"
                            max="10"
                            step="any"
                            pattern="[0-9]+([.][0-9]+)?"
                            onblur="this.value=isPosNumber(this.value)"
                            required
                        >
                    </div>
                    <div class="button-remover-container d-flex flex-row w-25 justify-content-end">
                        <div questao-id=${questao.id} class="button-remove btn btn-primary">Remover</div>
                    </div>
                </div>
                <div class="card-body">
                    <div>
                        <h6 class="card-title float-left">Enunciado</h6>
                        <p class="card-text ms-3 mb-1">${questao.enunciado}</p>
                    </div>
                    <div>
                        <h6 class="card-title float-left">Resposta</h6>
                        <p class="card-text ms-3 mb-1">${questao.resposta}</p>
                    </div>
                </div>  
            </div>
        `
        novoElemeto.classList.add("container")
        novoElemeto.setAttribute("li-questao-id", questao.id)
        questoesContainer.appendChild(novoElemeto)
    }

    const setNotaInput = (questao) => {
        // configura os inputs de notas
        const notaExame = document.getElementById("notaExame")
        const notaInput = document.querySelector(`input[name="questao_nota_${questao.id}"]`)

        notaInput.addEventListener("input", () => {
            let totalNota = 0
            if (notaInput.value != "")
                totalNota += parseFloat(isPosNumber(notaInput.value))

            notaExame.value = totalNota.toFixed(2)
        })
            

    }
    
    const setRemoveButton = (questao) => {
        // handle remover questoes
        const questaoID = questao.id
        const button = document.querySelector(`.button-remove[questao-id="${questaoID}"]`)

        button.addEventListener("click", () => {
            questoesSelecionadas = questoesSelecionadas.filter(questao => questao.id != questaoID)

            // remove valor da nota total
            const notaExame = document.getElementById("notaExame")
            const notaInput = document.querySelector(`input[name="questao_nota_${questao.id}"]`)
            if (notaInput.value != "") {
                const notaTotal = parseFloat(notaExame.value) - parseFloat(notaInput.value)
                notaExame.value = notaTotal.toFixed(2)
            }
            
            // remove li element da lista ul
            ulElement = document.getElementById("questoesContainer")
            questaoLiElement = document.querySelector(`li[li-questao-id="${questaoID}"]`)
            ulElement.removeChild(questaoLiElement)
        })

    }

    const questoesContainer = document.getElementById("questoesContainer")
    const btnIncluir = document.getElementById("btnIncluir")
    let questoesSelecionadas = []

    btnIncluir.addEventListener("click", () => {
        const myModal = document.querySelector('#questoesModal')
        const bsModal = bootstrap.Modal.getInstance(myModal)
        bsModal.hide()

        const checkboxes = document.querySelectorAll("input[name=questoes]:checked")
        const questoes_json = {{ questoes_json }}
        
        // adiciona questoes marcadas ao array questoesSelecionadas
        checkboxes.forEach(check => {
            const questaoID = check.value
            const questaoSelecionada = questoes_json.find(questao => questao.id == questaoID)
            // verifica se a questao ja esta no array
            const findQuestao = questoesSelecionadas.find(questao => questao.id == questaoID)
            console.log(findQuestao)

            // add questao se é valida e não existe no array
            if (questaoSelecionada && !findQuestao) {
                questoesSelecionadas.push(questaoSelecionada)
                addQuestaoElementToHTML(questaoSelecionada)
                setNotaInput(questaoSelecionada)
                setRemoveButton(questaoSelecionada)
            }
            // desmarca checkbox
            check.checked = false
        })


    })


    // handle form submition
    const form = document.querySelector("form")
    form.addEventListener("submit", (e) => {
        if (questoesSelecionadas.length ===  0) {
            e.preventDefault()
            alert("O exame deve ter ao menos uma questao!")
            return
        }

        const questoesSelecionadasInput = document.getElementById("questoesSelecionadasInput")
        const questoesObject = []
        questoesSelecionadas.forEach(questao => {
            let notaQuestao = document.getElementById(`questao_nota_${questao.id}`).value
            notaQuestao === "" ? notaQuestao = 0 : notaQuestao = parseFloat(notaQuestao)
            const obj = {
                "questao_id": questao.id,
                "nota_questao": notaQuestao
            }

            questoesObject.push(obj)
        })
        questoesSelecionadasInput.value = JSON.stringify(questoesObject)
    })


</script>
{% endblock %}